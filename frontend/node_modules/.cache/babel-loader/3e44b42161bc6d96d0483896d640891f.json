{"ast":null,"code":"var _jsxFileName = \"/Users/adityajaiswal/PycharmProjects/imageClassifier_app/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n  useEffect(() => {\n    if (url) {\n      uploadFields();\n    }\n  }, [url]);\n\n  const uploadPic = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"sk007\"); // for pic upload\n\n    fetch(\" https://api.cloudinary.com/v1_1/sk007/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      // console.log(data)\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const uploadFields = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) return M.toast({\n      html: \"invalid email\",\n      classes: \"#c62828 red darken-3\"\n    });\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email,\n        pic: url\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#388e3c green darken-2\"\n        });\n        history.push('/signin');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const PostData = () => {\n    if (image) {\n      uploadPic();\n    } else {\n      uploadFields();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn .#6a1b9a purple darken-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-path-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-path validate\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light .#6a1b9a purple darken-3\",\n      onClick: () => PostData(),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vRKW8YRGcUoHbjzf98432J9Mvus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adityajaiswal/PycharmProjects/imageClassifier_app/frontend/src/App.js"],"names":["React","useState","useEffect","App","image","setImage","url","setUrl","undefined","uploadFields","uploadPic","data","FormData","append","fetch","method","body","then","res","json","catch","err","console","log","test","email","M","toast","html","classes","headers","JSON","stringify","name","password","pic","error","message","history","push","PostData","e","target","files"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n    useEffect(()=>{\n        if(url)\n        {\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"sk007\")\n\n        // for pic upload\n        fetch(\" https://api.cloudinary.com/v1_1/sk007/image/upload\",{\n            method:\"post\",\n            body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                // console.log(data)\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n\n    const uploadFields=()=>{\n\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n        return M.toast({html: \"invalid email\" ,classes:\"#c62828 red darken-3\"})\n\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json()).then(data=>{\n            console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                M.toast({html:data.message,classes:\"#388e3c green darken-2\"})\n                    history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const PostData = ()=>{\n\n        if(image)\n        {\n            uploadPic()\n        }\n        else{\n            uploadFields()\n        }\n\n    }\n  return (\n    <div className=\"App\">\n    <div className=\"file-field input-field\">\n                    <div className=\"btn .#6a1b9a purple darken-3\">\n                        <span>Upload Pic</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n    <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Sign Up\n\n                </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}