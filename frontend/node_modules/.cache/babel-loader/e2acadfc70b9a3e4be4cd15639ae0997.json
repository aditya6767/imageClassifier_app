{"ast":null,"code":"var _jsxFileName = \"/Users/adityajaiswal/PycharmProjects/imageClassifier_app/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (url) {\n      uploadFields();\n    }\n  }, [url]);\n\n  const uploadPic = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"classifier_image_upload\");\n    data.append(\"cloud_name\", \"duxnhitdq\"); // for pic upload\n\n    fetch(\"https://api.cloudinary.com/v1_1/duxnhitdq/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setUrl(data.url);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  };\n\n  const uploadFields = () => {\n    fetch(\"http://0.0.0.0:8181/my_api/classify\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        imageUrl: url\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setResponse(data === null || data === void 0 ? void 0 : data.output_result);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  };\n\n  const PostData = () => {\n    setLoading(true);\n    uploadPic();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn .#6a1b9a purple darken-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light .#6a1b9a purple darken-3\",\n      onClick: () => PostData(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), response ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"classname = \", response.classname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"probability =  \", response.probability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QGxXz5S9ln5s1/qQsRfK66OWhwA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adityajaiswal/PycharmProjects/imageClassifier_app/frontend/src/App.js"],"names":["React","useState","useEffect","App","image","setImage","url","setUrl","undefined","response","setResponse","loading","setLoading","uploadFields","uploadPic","data","FormData","append","fetch","method","body","then","res","json","console","log","catch","err","headers","JSON","stringify","imageUrl","output_result","PostData","e","target","files","classname","probability"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport './App.css';\n\nfunction App() {\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n    const [response ,setResponse] = useState(null)\n    const [loading ,setLoading] = useState(false)\n    useEffect(()=>{\n        if(url)\n        {\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"classifier_image_upload\")\n        data.append(\"cloud_name\",\"duxnhitdq\")\n\n        // for pic upload\n        fetch(\"https://api.cloudinary.com/v1_1/duxnhitdq/image/upload\",{\n            method:\"post\",\n            body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                 console.log(data)\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                setLoading(false)\n                console.log(err)\n            })\n    }\n    const uploadFields=()=>{\n\n        fetch(\"http://0.0.0.0:8181/my_api/classify\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                imageUrl:url\n            })\n        }).then(res=>res.json()).then(data=>{\n            console.log(data)\n            setResponse(data?.output_result)\n            setLoading(false)\n        }).catch(err=>{\n            setLoading(false)\n            console.log(err)\n        })\n    }\n\n    const PostData = ()=>{\n        setLoading(true)\n        uploadPic()\n    }\n  return (\n    <div className=\"App\">\n    <div className=\"file-field input-field\">\n                    <div className=\"btn .#6a1b9a purple darken-3\">\n                        <span>Upload Pic</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                    </div>\n                </div>\n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                Upload\n                </button>\n                {\n                    response ? (\n                    <div>\n                    <div>\n                    classname = {response.classname}\n                    </div>\n                     <div>\n                    probability =  {response.probability}\n                    </div>\n                    </div>\n                    ) : loading ? (\n                                    <div>\n                                    loading....\n                                    </div>\n                                    ) : null\n                }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}